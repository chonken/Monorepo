---
import type { ElementProps } from '../type/element'
import { mergeClasses } from '../utils'
import Content from './Content.astro'

export interface RevealCardProps extends ElementProps {
  background?: string
  backgroundHover?: string
  mobile?: 'md' | 'sm' | 'xs' | '2xl' | 'none'
}
interface Props extends RevealCardProps {}

const { element = 'div', id, class: className = '', background = '#eee8', backgroundHover = background, mobile = 'none', ...rest } = Astro.props

const Element = element as keyof HTMLElement
const styleList = {
  '--bg': background,
  '--bg-h': backgroundHover,
}
const classList = mergeClasses(className, ['ch-rvc', mobile === 'none' ? '' : `mob-${mobile}`]).join(' ')
---

<Element class:list={classList} style={styleList} {...rest}>
  <slot name="image" />
  <Content>
    <div class="ch-rvc-t"><slot name="title" /></div>
    <div class="ch-rvc-b"><slot /></div>
  </Content>
</Element>

<style lang="scss" is:global>
  @use '../config/breakpoint' as bp;

  .ch-rvc {
    position: relative;
    width: fit-content;
    & > .ch-cnt {
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0;
      display: flex;
      flex-direction: column;
      justify-content: center;
      max-width: 100%;
      height: 100%;
      max-height: 0;
      min-height: fit-content;
      overflow: hidden;
      background: var(--bg);
      transition: 0.4s ease-in;
      z-index: 1;
    }
    &:hover > .ch-cnt {
      max-height: 100%;
      background: var(--bg-h);
      transition-timing-function: ease;
    }
    &:hover .ch-rvc-b {
      max-height: 100%;
    }
  }
  .ch-rvc-b {
    max-height: 0%;
    overflow: hidden;
    transition: 0.4s linear;
  }

  // 手動設定尺寸
  $map: md, sm, xs, 2xs;

  @each $size in $map {
    @media (max-width: bp.size($size)) {
      .ch-rvc.mob-#{$size} > .ch-cnt {
        position: static;
        max-height: unset;
        height: auto;
        background: var(--bg-h);
        transition-timing-function: ease;
      }
      .ch-rvc.mob-#{$size} .ch-rvc-b {
        max-height: unset;
      }
    }
  }
</style>
