---
import type { ButtonProps } from '../../type/button'
import { mergeClasses } from '../../utils'

export interface Btn12Props extends ButtonProps {
  borderColor?: string
  move?: 'left' | 'right' | 'up' | 'down'
}
interface Props extends Btn12Props {}

const { href = '#', class: className = '', color = 'inherit', backgroundColor = '#fff0', borderColor = '#333', move = 'right', blank = false, ...rest } = Astro.props

// 方向設定
const moveMap = {
  x: {
    left: '-100%',
    right: '100%',
  },
  y: {
    up: '-100%',
    down: '100%',
  },
}

const styleList = {
  '--tra-x': moveMap['x'][move] || '0px',
  '--tra-y': moveMap['y'][move] || '0px',
  '--clr': color,
  '--bgc': backgroundColor,
  '--bor-c': borderColor,
}
const classList = mergeClasses(className, ['btn_type12'])
---

<a href={href} class:list={classList} style={styleList} target={blank ? '_blank' : undefined} {...rest}>
  <span>
    <slot>查看更多</slot>
    <span><slot name="hoverText">MORE</slot></span>
  </span>
</a>

<style lang="scss" is:global>
  .btn_type12 {
    position: relative;
    display: inline-block;
    color: var(--clr);
    text-align: center;
    line-height: 1.2;
    overflow: hidden;
    border: 1px solid var(--bor-c);
    background: var(--bgc);
    z-index: 1;
    & > span {
      padding: 0.5em 1.5em;
    }
    & > span,
    & span span {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      align-items: center;
      transition: 0.4s;
    }
    & span span {
      position: absolute;
      inset: 0;
      transform: translate(calc(var(--tra-x) * -1), calc(var(--tra-y) * -1));
    }
    &:hover > span {
      transform: translate(var(--tra-x), var(--tra-y));
    }
  }
</style>
