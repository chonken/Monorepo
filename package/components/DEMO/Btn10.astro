---
const { href = '#', target = false } = Astro.props
let { class: className = '' } = Astro.props
if (className === 'btn_type10') className = ''

const classList = `${className} btn_type10`.trim()
---

<a class={classList} href={href} target={target ? '_blank' : undefined}><span><span><slot /></span></span></a>

<style is:global>
  a.btn_type10 {
    position: relative;
    display: block;
    padding: 0.6em;
    width: fit-content;
    line-height: 1;
    color: #333333;
    z-index: 1;
  }
  a.btn_type10 > span {
    display: block;
    width: 100%;
  }
  a.btn_type10 span span {
    display: block;
    transition: all 0.1s;
    padding: 0.7em 2em;
  }
  a.btn_type10:hover span span {
    background: #eef1f6;
    transition: 0.5s;
  }
  a.btn_type10::before,
  a.btn_type10::after,
  a.btn_type10 > span::before,
  a.btn_type10 > span::after {
    content: '';
    position: absolute;
    border: 2px solid #333333;
    transition: 0.5s;
    width: 15px;
    height: 15px;
    opacity: 0;
  }
  a.btn_type10::before {
    top: -10px;
    left: -10px;
    border-width: 2px 0 0 2px;
  }
  a.btn_type10:after {
    top: -10px;
    right: -10px;
    border-width: 2px 2px 0 0;
  }
  a.btn_type10 > span::before {
    bottom: -10px;
    left: -10px;
    border-width: 0 0 2px 2px;
  }
  a.btn_type10 > span::after {
    bottom: -10px;
    right: -10px;
    border-width: 0 2px 2px 0;
  }
  a.btn_type10:hover:before {
    top: 0px;
    left: 0px;
    opacity: 1;
  }
  a.btn_type10:hover:after {
    top: 0px;
    right: 0px;
    opacity: 1;
  }
  a.btn_type10:hover > span::before {
    bottom: 0px;
    left: 0px;
    opacity: 1;
  }
  a.btn_type10:hover > span::after {
    bottom: 0px;
    right: 0px;
    opacity: 1;
  }
</style>
