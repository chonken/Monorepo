---
interface Props {
  id?: string
  class?: string
  item?: 'stretch' | 'start' | 'center' | 'end'
  justify?: 'start' | 'center' | 'end' | 'between' | 'around' | 'evenly' | 'space-between' | 'space-around' | 'space-evenly'
  gap?: string | number
  col: string
  maxWidth?: number | string
  center?: boolean
}
import { mergeClasses, parseDualUnit, parseRWD, parseJustify, fullRWD } from '../utils'
import Container from './Container.astro'
const { id, class: className = '', maxWidth = '100%', item = 'stretch', justify = 'center', gap = '0', col, center = false, ...rest } = Astro.props

// RWD尺寸(由大到小排序)
const sizes = ['2xl', 'xl', 'lg', 'md', 'sm', 'xs', '2xs']

// 解析gap
const [rowGap, colGap] = parseDualUnit(gap)

// 解析col
const colMap = fullRWD(parseRWD(col), sizes)

const styleList: Record<string, string> = {
  '--itm': item,
  '--jst': parseJustify(justify),
  '--rgap': rowGap,
  '--cgap': colGap,
}
// 設定col數量
Object.entries(colMap).forEach(([key, val]) => {
  styleList[`--col${key === 'default' ? '' : '-' + key}`] = `${val}`
})
const classList = mergeClasses(className, ['ch-grd', `${(maxWidth + '').endsWith('px') || +maxWidth ? 'ch-fixed' : ''}`]).join(' ')
---

<Container id={id} class={classList} styleList={styleList} maxWidth={maxWidth} center={center} {...rest}>
  <slot />
</Container>

<style lang="scss" is:global>
  @use 'sass:map';
  @use '../config/breakpoint' as bp;
  .ch-grd {
    display: flex;
    flex-wrap: wrap;
    justify-content: var(--jst);
    align-items: var(--itm);
    gap: var(--rgap) var(--cgap);
    & > * {
      max-width: calc((100% - var(--cgap) * max(var(--col-2xl) - 1, 0)) / var(--col-2xl));
    }
  }
  :where(.ch-grd) > * {
    width: 100%;
  }

  // 手動設定和對應尺寸
  $map: (
    2xl: var(--col-2xl),
    xl: var(--col-xl),
    lg: var(--col-lg),
    md: var(--col-md),
    sm: var(--col-sm),
    xs: var(--col-xs),
    2xs: var(--col-2xs),
  );

  @each $size, $col in $map {
    @media (max-width: bp.size($size)) {
      .ch-grd.ch-fixed {
        max-width: calc((var(--mw) - var(--cgap) * max(var(--col) - 1, 0)) / var(--col) * #{$col} + (#{$col} - 1) * var(--cgap));
      }
      .ch-grd > * {
        max-width: calc((100% - var(--cgap) * max(#{$col} - 1, 0)) / #{$col});
      }
    }
  }
</style>
