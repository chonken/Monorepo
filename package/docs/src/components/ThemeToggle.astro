---
interface Props {
  class?: string
}
import { mergeClasses } from '@utils'
const { class: className = '', ...rest } = Astro.props

const classList = mergeClasses(className, ['relative', 'z-1', 'flex', 'items-center', 'ml-auto', 'gap-[1em]', 'px-[0.8em]', 'pt-[0.5em]', 'pb-[0.45em]', 'rounded-full', 'text-white', 'bg-black', 'opacity-75', 'hover:opacity-100', 'transition-all', 'duration-200', 'cursor-pointer']).join(' ')
---

<div id="theme-toggle" class={classList} {...rest}>
  <div class="absolute inset-[0.125em] pointer-events-none">
    <div id="theme-backgroud" class="w-[2.6em] h-full rounded-full bg-white mix-blend-difference transition-[translate] duration-800"></div>
  </div>
  <i class="fa-solid fa-moon text-white"></i>
  <i class="fa-solid fa-sun text-white"></i>
</div>

<script>
  const theme = document.querySelector('#theme-toggle') as HTMLDivElement
  const themeBackgroud = document.querySelector('#theme-backgroud') as HTMLDivElement
  function themeSet() {
    if (document.body.classList.contains('dark')) {
      themeBackgroud.classList.remove('translate-x-[calc(2.25/2.6*100%)]')
      theme.classList.add('invert')
    } else {
      themeBackgroud.classList.add('translate-x-[calc(2.25/2.6*100%)]')
      theme.classList.remove('invert')
    }
  }
  theme.addEventListener('click', function () {
    document.body.classList.toggle('dark')
    themeSet()
  })
  window.addEventListener('load', themeSet)
</script>
