---
import Component from '@components/Flex.astro'
import config from '../config.json'
import content from '../../content/demo.json'

export const id = 'ch-flex'
export const { keywords, category } = config['components'][id]
export const props = {
  id: { type: ['string'], require: false, default: '' },
  class: { type: ['string'], require: false, default: '' },
  element: { type: ['string'], require: false, default: 'div', demo: 'ul' },
  wrap: { type: ['boolean'], require: false, default: false, demo: true },
  flexReverse: { type: ['boolean'], require: false, default: false },
  item: { type: ['stretch', 'start', 'center', 'end'], require: false, default: 'stretch' },
  justify: { type: ['start', 'center', 'end', 'between', 'around', 'evenly', 'space-between', 'space-around', 'space-evenly'], require: false, default: 'start', demo: 'center' as const },
  gap: { type: ['string', 'number'], require: false, default: '40', demo: '15' },
  reverse: { type: ['boolean'], require: false, default: false },
  mobile: { type: ['3xl', '2xl', 'xl', 'lg', 'md', 'sm', 'xs', '2xs', 'none', 'inherit'], require: false, default: 'md' },
  mobileItem: { type: ['stretch', 'start', 'center', 'end'], require: false, default: 'center' },
  mobileJustify: { type: ['start', 'center', 'end', 'between', 'around', 'evenly', 'space-between', 'space-around', 'space-evenly'], require: false, default: 'center' },
  mobileFit: { type: ['boolean'], require: false, default: false },
  mobileReverse: { type: ['boolean'], require: false, default: false },
}
export const slots = ['default']
const data = content['item'] ?? []
---

<Component element={props.element.demo} wrap={props.wrap.demo} justify={props.justify.demo} gap={props.gap.demo}>
  <li class="item">
    <hgroup>
      <h2>{data[0]?.title}</h2>
      <p>{data[0]?.subtitle}</p>
    </hgroup>
    {data[0]?.text.map((item: string) => <p>{item}</p>)}
  </li>
  <li class="item">
    <hgroup>
      <h2>{data[1]?.title}</h2>
      <p>{data[1]?.subtitle}</p>
    </hgroup>
    {data[1]?.text.map((item: string) => <p>{item}</p>)}
  </li>
  <li class="item">
    <hgroup>
      <h2>{data[2]?.title}</h2>
      <p>{data[2]?.subtitle}</p>
    </hgroup>
    {data[2]?.text.map((item: string) => <p>{item}</p>)}
  </li>
</Component>

<style>
  .item {
    padding: 40px 20px;
    width: 300px;
    background-color: #eee8;
  }
</style>
